---
- name: "FirewallD management"
  hosts: "all"
  become: true
  gather_facts: true
  # vars:
  #   ssh_port: 22
  tasks:
    # +------------------------------------+
    # |            INSTALLATION            |
    # +------------------------------------+

    - name: "FirewallD | Install FirewallD using APT"
      ansible.builtin.apt:
        name: ["firewalld", "python3-firewall"]
        state: "latest"
        update_cache: true
      when: "ansible_pkg_mgr == 'apt'"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Install FirewallD using DNF"
      ansible.builtin.dnf:
        name: ["firewalld", "python3-firewall"]
        state: "latest"
        update_cache: true
      when: "ansible_pkg_mgr == 'dnf'"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Start FirewallD service"
      ansible.builtin.service:
        name: "firewalld"
        state: "started"
        enabled: true
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Collect all the zones"
      ansible.posix.firewalld_info: {}
      register: "firewalld_info"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Allow SSH traffic on the 'dmz' and 'internal' zones"
      ansible.posix.firewalld:
        immediate: true
        permanent: true
        port: "{{ ssh_port | default('22') }}/tcp"
        state: "enabled"
        zone: "{{ item }}"
      loop: ["dmz", "internal"]
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Set the 'internal' sources"
      ansible.posix.firewalld:
        immediate: true
        permanent: true
        source: "{{ item }}"
        state: "enabled"
        zone: "internal"
      loop: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Remove the default allowed services"
      ansible.posix.firewalld:
        immediate: true
        permanent: true
        service: "{{ item.1 }}"
        state: "disabled"
        zone: "{{ item.0 }}"
      loop: "{{ firewalld_info.collected_zones | product(['cockpit', 'dhcp', 'dhcpv6-client', 'dns', 'mdns', 'samba-client', 'ssh']) | list }}"  # yamllint disable-line rule:line-length
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Set the default target to 'DROP' on all zones"
      ansible.posix.firewalld:
        permanent: true
        target: "DROP"
        zone: "{{ item }}"
        state: "enabled"
      loop: "{{ firewalld_info.collected_zones | reject('equalto', 'docker') }}"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Use the 'dmz' zone as default"
      ansible.builtin.lineinfile:
        path: "/etc/firewalld/firewalld.conf"
        regexp: "^DefaultZone="
        line: "DefaultZone=dmz"
        state: "present"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Configure the 'dmz' interface"
      ansible.posix.firewalld:
        immediate: true
        permanent: true
        interface: "{{ ansible_default_ipv4.interface }}"
        zone: "dmz"
        state: "enabled"
      tags: ["install", "firewalld-install"]

    - name: "FirewallD | Restart the service"
      ansible.builtin.service:
        name: "firewalld"
        state: "restarted"
        enabled: true
      tags: ["install", "firewalld-install"]

    # +------------------------------------+
    # |           UNINSTALLATION           |
    # +------------------------------------+

    - name: "FirewallD | Populate the service facts"
      ansible.builtin.service_facts: {}
      tags: ["uninstall", "firewalld-uninstall"]

    - name: "FirewallD | Stop the service"
      ansible.builtin.service:
        enabled: false
        name: "firewalld"
        state: "stopped"
      when: '"firewalld.service" in ansible_facts.services'
      tags: ["uninstall", "firewalld-uninstall"]

    - name: "FirewallD | Uninstall packages using APT"
      ansible.builtin.apt:
        name: ["firewalld", "python3-firewall"]
        state: "absent"
        autoclean: true
        autoremove: true
        purge: true
      when: "ansible_pkg_mgr == 'apt'"
      tags: ["uninstall", "firewalld-uninstall"]

    - name: "FirewallD | Uninstall packages using DNF"
      ansible.builtin.dnf:
        name: ["firewalld"]
        state: "absent"
        autoremove: true
      tags: ["uninstall", "firewalld-uninstall"]

    - name: "FirewallD | Remove the files and directories"
      ansible.builtin.file:
        path: "{{ item }}"
        state: "absent"
      loop:
        - "/etc/firewalld"
        - "/run/firewalld"
        - "/usr/sbin/firewalld"
        - "/usr/lib/firewalld"
        - "/usr/lib/systemd/system/firewalld.service"
        - "/var/log/firewalld"
      tags: ["uninstall", "firewalld-uninstall"]

    - name: "FirewallD | Reload the systemd daemon"
      ansible.builtin.systemd_service:
        daemon_reload: true
      when: "ansible_service_mgr == 'systemd'"
      tags: ["uninstall", "firewalld-uninstall"]
...
